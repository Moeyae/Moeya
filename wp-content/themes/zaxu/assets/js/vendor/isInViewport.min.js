!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(require("jquery")):"function"==typeof define&&define.amd?define(["jquery"],n):n(e.jQuery)}(this,(function(e){"use strict";function n(t,o){var r=t.getBoundingClientRect(),i=r.top,a=r.bottom,u=r.left,c=r.right,f=e.extend({tolerance:0,viewport:window},o),s=!1,d=f.viewport.jquery?f.viewport:e(f.viewport);d.length||(console.warn("isInViewport: The viewport selector you have provided matches no element on page."),console.warn("isInViewport: Defaulting to viewport as window"),d=e(window));var l=d.height(),p=d.width(),w=d[0].toString();if(d[0]!==window&&"[object Window]"!==w&&"[object DOMWindow]"!==w){var h=d[0].getBoundingClientRect();i-=h.top,a-=h.top,u-=h.left,c-=h.left,n.scrollBarWidth=n.scrollBarWidth||function(n){var t=e("<div></div>").css({width:"100%"});n.append(t);var o=n.width()-t.width();return t.remove(),o}(d),p-=n.scrollBarWidth}return f.tolerance=~~Math.round(parseFloat(f.tolerance)),f.tolerance<0&&(f.tolerance=l+f.tolerance),c<=0||u>=p?s:s=f.tolerance?i<=f.tolerance&&a>=f.tolerance:a>0&&i<=l}function t(n){if(n){var t=n.split(",");return 1===t.length&&isNaN(t[0])&&(t[1]=t[0],t[0]=void 0),{tolerance:t[0]?t[0].trim():void 0,viewport:t[1]?e(t[1].trim()):void 0}}return{}}
/**
 * @author  Mudit Ameta
 * @license https://github.com/zeusdeux/isInViewport/blob/master/license.md MIT
 */
(e=e&&e.hasOwnProperty("default")?e.default:e).extend(e.expr.pseudos||e.expr[":"],{"in-viewport":e.expr.createPseudo?e.expr.createPseudo((function(e){return function(o){return n(o,t(e))}})):function(e,o,r){return n(e,t(r[3]))}}),e.fn.isInViewport=function(e){return this.filter((function(t,o){return n(o,e)}))},e.fn.run=function(n){var t=this;1===arguments.length&&"function"==typeof n&&(n=[n]);if(!(n instanceof Array))throw new SyntaxError("isInViewport: Argument(s) passed to .do/.run should be a function or an array of functions");return n.forEach((function(n){"function"!=typeof n?(console.warn("isInViewport: Argument(s) passed to .do/.run should be a function or an array of functions"),console.warn("isInViewport: Ignoring non-function values in array and moving on")):[].slice.call(t).forEach((function(t){return n.call(e(t))}))})),this}}));